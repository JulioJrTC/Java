/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CodigoInterface;

import java.awt.ComponentOrientation;
import java.util.Random;
import javax.management.modelmbean.ModelMBean;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author julio
 */
public class Exercicio19 extends javax.swing.JFrame {

    private DefaultListModel<String> model; // Declaração do campo model

    /**
     * Creates new form Exercicio19
     */
    public Exercicio19() {
        initComponents();

        //Inicializando o modelo de lista padrao e setando o modelo da mesma a lista
        model = new DefaultListModel<>(); // Inicialização do campo model
        listaAlunos.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaAlunos = new javax.swing.JList<>();
        btnAdicionarLista = new javax.swing.JButton();
        txtAluno = new javax.swing.JTextField();
        lblAluno = new javax.swing.JLabel();
        btnEscolherAluno = new javax.swing.JButton();
        lblAlunoEscolhido = new javax.swing.JLabel();
        txtAlunoEscolhido = new javax.swing.JTextField();
        btnLimparLista = new javax.swing.JButton();
        btnExcluirItem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Escolha aleatoria de aluno");

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitulo.setText("Exercicio 19: Escolha aleatoria de aluno");

        jScrollPane1.setViewportView(listaAlunos);

        btnAdicionarLista.setText("Adicionar a lista");
        btnAdicionarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarListaActionPerformed(evt);
            }
        });

        lblAluno.setText("Aluno:");

        btnEscolherAluno.setText("Escolher");
        btnEscolherAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscolherAlunoActionPerformed(evt);
            }
        });

        lblAlunoEscolhido.setText("Aluno escolhido:");

        btnLimparLista.setText("Limpar Lista");
        btnLimparLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparListaActionPerformed(evt);
            }
        });

        btnExcluirItem.setText("Excluir");
        btnExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(lblAluno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lblTitulo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(lblAlunoEscolhido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAlunoEscolhido, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(btnEscolherAluno))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnLimparLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExcluirItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(btnAdicionarLista)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(lblTitulo)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAluno))
                .addGap(19, 19, 19)
                .addComponent(btnAdicionarLista)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnExcluirItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimparLista)
                        .addGap(71, 71, 71)))
                .addComponent(btnEscolherAluno)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlunoEscolhido)
                    .addComponent(txtAlunoEscolhido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnAdicionarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarListaActionPerformed
        // TODO add your handling code here: BOTAO ADICIONAR A LISTA

        //Variavel irá receber valores de uma caixa de texto
        String aluno = txtAluno.getText();

        //Se a caixa de texto NÃO estiver vazia
        if (!aluno.isEmpty()) {
            //Adicionando valores da caixa de texto ao "modelo" da lista
            model.addElement(aluno);

            //Limpando caixa de texto ao inserir um valor a lista
            txtAluno.setText(null);

            //Caso a caixa de texto esteja vazia, iremos exibir um erro    
        } else {
            JOptionPane.showMessageDialog(null, "Digite o nome de um aluno!");
        }

    }//GEN-LAST:event_btnAdicionarListaActionPerformed

    private void btnEscolherAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscolherAlunoActionPerformed
        // TODO add your handling code here: BOTAO ESCOLHER ALUNO

        // Se a lista não estiver vazia
        if (!model.isEmpty()) {
            // Obtém um número aleatório dentro do intervalo dos índices da lista
            Random numeroAleatorio = new Random();
            int index = numeroAleatorio.nextInt(model.size());

            // Obtém o aluno aleatório da lista e exibe-o na caixa de texto
            String alunoAleatorio = model.getElementAt(index);
            txtAlunoEscolhido.setText(alunoAleatorio);

        //Caso a lista estiver vazia, iremos exibir um erro
        } else {
            JOptionPane.showMessageDialog(this, "A lista de alunos está vazia!");
        }

    }//GEN-LAST:event_btnEscolherAlunoActionPerformed

    private void btnLimparListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparListaActionPerformed
        // TODO add your handling code here: BOTAO LIMPAR LISTA

        //Limpando lista inteira
        model.clear();

    }//GEN-LAST:event_btnLimparListaActionPerformed

    private void btnExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirItemActionPerformed
        // TODO add your handling code here: BOTAO EXCLUIR ITEM

        //Armazenando o index de um valor selecionado na lista em uma variavel
        int indexSelecionado = listaAlunos.getSelectedIndex();

        //Se SELECIONARMOS um valor na lista, iremos excluir esse valor
        if (indexSelecionado != -1) {

            //Criando um novo objeto para o model da lista
            DefaultListModel<String> model = (DefaultListModel<String>) listaAlunos.getModel();

            //Iremos remover um elemento da lista ao selecionarmos um valor na mesma
            model.removeElementAt(indexSelecionado);

        //Caso contrario, iremos exibir uma mensagem de erro
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um item para excluir.", "Nenhum item selecionado", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnExcluirItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Exercicio19.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Exercicio19.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Exercicio19.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Exercicio19.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Exercicio19().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarLista;
    private javax.swing.JButton btnEscolherAluno;
    private javax.swing.JButton btnExcluirItem;
    private javax.swing.JButton btnLimparLista;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAluno;
    private javax.swing.JLabel lblAlunoEscolhido;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JList<String> listaAlunos;
    private javax.swing.JTextField txtAluno;
    private javax.swing.JTextField txtAlunoEscolhido;
    // End of variables declaration//GEN-END:variables
}
